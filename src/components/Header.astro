---
import { SITE, LINKS } from "@consts"
import { cn } from "@lib/utils"
const { pathname } = Astro.url
const subpath = pathname.match(/[^/]+/g)
import Container from "@components/Container.astro"
---

<header id="header" class="scrolled fixed top-4 left-1/2 transform -translate-x-1/2 w-[80%] h-16 z-50 rounded-xl shadow-black/50 shadow-2xl">
  <Container size="lg">
    <div class="relative h-full w-full">
      <!-- Left Section -->
      <div class="absolute left-4 top-1/2 -translate-y-1/2 flex gap-1 hover:scale-110 transition-all duration-300">
        <a href="/" class="flex gap-3 place-items-center w-fit text-current dark:text-blue-300 hover:text-black dark:hover:text-white transition-colors duration-300 ease-in-out font-stop text-4xl">
          <div>{SITE.TITLE}</div>
        </a>
      </div>

      <!-- Center Section -->
      <div class="absolute left-1/2 top-1/2 -translate-x-1/2 -translate-y-1/2">
        <nav class="hidden md:flex items-center justify-center text-sm gap-1">
          {
            LINKS.map((LINK) => (
                <a href={LINK.HREF} class={cn("h-8 rounded-md px-3 text-current", "flex items-center justify-center", "transition-colors duration-300 ease-in-out", pathname === LINK.HREF || "/" + subpath?.[0] === LINK.HREF ? "bg-black dark:bg-blue-300 text-white dark:text-black dark:hover:bg-white hover:bg-blue-950" : "hover:bg-black/5 dark:hover:bg-white/20 hover:text-black dark:hover:text-white")}>
                  {LINK.TEXT}
                </a>
            ))
          }
        </nav>
      </div>

      <!-- Right Section -->
      <div class="buttons absolute right-4 top-1/2 -translate-y-1/2 flex gap-1">
        <a href="/search" aria-label={`Search blog posts and projects on ${SITE.TITLE}`} class={cn("hidden md:flex", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out", pathname === "/search" || "/" + subpath?.[0] === "/search" ? "pointer-events-none bg-black dark:bg-white text-white dark:text-black" : "")}>
          <svg class="size-full">
            <use href="/ui.svg#search"></use>
          </svg>
        </a>

        <button id="header-theme-button" aria-label={`Toggle light and dark theme`} class={cn("hidden md:flex", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out")}>
          <svg class="size-full block dark:hidden">
            <use href="/ui.svg#sun"></use>
          </svg>
          <svg class="size-full hidden dark:block">
            <use href="/ui.svg#moon"></use>
          </svg>
        </button>

        <button id="header-drawer-button" aria-label={`Toggle drawer open and closed`} class={cn("flex md:hidden", "size-9 rounded-full p-2 items-center justify-center", "bg-transparent hover:bg-black/5 dark:hover:bg-white/20", "stroke-current hover:stroke-black hover:dark:stroke-white", "border border-black/10 dark:border-white/25", "transition-colors duration-300 ease-in-out")}>
          <svg id="drawer-open" class="size-full">
            <use href="/ui.svg#menu"></use>
          </svg>
          <svg id="drawer-close" class="size-full">
            <use href="/ui.svg#x"></use>
          </svg>
        </button>
      </div>
    </div>
  </Container>
</header>


<style>
  #header-drawer-button > #drawer-open {
    @apply block;
  }

  #header-drawer-button > #drawer-close {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-open {
    @apply hidden;
  }

  #header-drawer-button.open > #drawer-close {
    @apply block;
  }
</style>

<script is:inline>
  function toggleDrawer() {
    const drawer = document.getElementById("drawer")
    const drawerButton = document.getElementById("header-drawer-button")
    drawer?.classList.toggle("open")
    drawerButton?.classList.toggle("open")
  }

  function initializeDrawerButton() {
    const drawerButton = document.getElementById("header-drawer-button")
    drawerButton?.addEventListener("click", toggleDrawer)
  }

  document.addEventListener("astro:after-swap", initializeDrawerButton)
  initializeDrawerButton()
</script>



